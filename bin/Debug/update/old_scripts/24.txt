CREATE PROCEDURE [dbo].[Save_Detail_Data]

	@ok_sl_dtl bit,
	@ok_pu_dtl bit,
	@ok_sto_dtl bit,

	@br_no nvarchar(2),	
	@sl_no nvarchar(2),	
	@trtype nvarchar(2),
	@trref int,

	@sales_hdr_tb tb_sal_hdr  READONLY,
	@pu_hdr_tb tb_pu_hdr  READONLY,
	@sto_hdr_tb tb_sto_hdr  READONLY,

	@sales_dtl_tb tb_sales_dtl  READONLY,
	@pu_dtl_tb tb_pu_dtl  READONLY,
	@sto_dtl_tb tb_sto_dtl  READONLY,


	@errstatus int = 0 output
 
AS
BEGIN

	if @ok_sl_dtl=1
	   BEGIN 
	   BEGIN TRANSACTION;  
  
       BEGIN TRY 

	    delete from  sales_dtl where branch=@br_no and slcenter=@sl_no and invtype=@trtype and ref=@trref;

		merge sales_dtl as t 
		using (select * from @sales_dtl_tb where branch=@br_no and slcenter=@sl_no and invtype=@trtype and ref=@trref) as s
	    ON t.[branch] = s.[branch] AND t.[folio] = s.[folio] AND t.[invtype] = s.[invtype] AND t.[ref] = s.[ref] AND t.[slcenter] = s.[slcenter]
	    when not matched then
		INSERT([branch],[slcenter],[invtype],[ref],[invmdate],[invhdate],[itemno],[unicode],[qty],[fqty],[price],[discpc],[cost],[ds_acfm],[sl_acfm],[gclass],[custno],[fcy],[barcode],[imfcval],[pack],[pkqty],[shadd],[shdpk],[shdqty],[frtqty],[rtnqty],[whno],[cmbkey],[folio],[rplct_post],[sold_item_status],[tax_amt],[tax_id],[stk_or_ser],[tax_prcent],[offer_amt])
        VALUES(s.[branch],s.[slcenter],s.[invtype],s.[ref],s.[invmdate],s.[invhdate],s.[itemno],s.[unicode],s.[qty],s.[fqty],s.[price],s.[discpc],s.[cost],s.[ds_acfm],s.[sl_acfm],s.[gclass],s.[custno],s.[fcy],s.[barcode],s.[imfcval],s.[pack],s.[pkqty],s.[shadd],s.[shdpk],s.[shdqty],s.[frtqty],s.[rtnqty],s.[whno],s.[cmbkey],s.[folio],s.[rplct_post],s.[sold_item_status],s.[tax_amt],s.[tax_id],s.[stk_or_ser],s.[tax_prcent],s.[offer_amt]);
		
        set @errstatus=1
	    COMMIT;  	  
	   END TRY

       BEGIN CATCH
	     set @errstatus=0
         ROLLBACK; 
       END CATCH
	   END
------  Process pu_hdr & pu_dtl Table  
-- 	if @ok_pu_dtl=1 
--	begin
------------ sdaad_hd Table
------		set @sqlmsg='merge pu_hdr as t 
------		using (select * from '+@dbc+'pu_hdr with (NOLOCK) where 1=1 ' + iif(@ok_pstd=1,' and posted=1 ','')
------		+' and invmdate between '+@fmdate+' and '+@todate+') as s
------		 ON t.[branch] = s.[branch] AND t.[invtype] = s.[invtype] AND t.[ref] = s.[ref] AND t.[pucenter] = s.[pucenter]
------		 when not matched then
------		INSERT([branch],[pucenter],[invtype],[ref],[invmdate],[invhdate],[supno],[text],[glser],[dsctype],[pstmode],[cur],[currate],[invttl],[invcst],[invdspc],[invdsvl],[nettotal],[invpaid],[casher],[entries],[released],[posted],[fixrate],[extamt],[extser],[pricetp],[ischeque],[chkno],[chkdate],[lastupdt],[jvgenrt],[cccommsn],[belowbal],[invsupno],[ccpayment],[rplsamt],[pdother],[slcode],[prpaidamt],[instldays],[instflag],[slcmnd],[inv_printed],[bendit],[modified],[rqstorder],[rqststld],[carrier],[rcvdtrn],[usrid],[address],[wst_key],[wst_amt],[gmark],[tameen],[shahan],[msfr],[mother],[etax],[remarks],[tax_amt_paid],[with_tax],[taxid],[tax_percent],[taxfree_amt],[reref],[sabr])
------        VALUES(s.[branch],s.[pucenter],s.[invtype],s.[ref],s.[invmdate],s.[invhdate],s.[supno],s.[text],s.[glser],s.[dsctype],s.[pstmode],s.[cur],s.[currate],s.[invttl],s.[invcst],s.[invdspc],s.[invdsvl],s.[nettotal],s.[invpaid],s.[casher],s.[entries],s.[released],s.[posted],s.[fixrate],s.[extamt],s.[extser],s.[pricetp],s.[ischeque],s.[chkno],s.[chkdate],s.[lastupdt],s.[jvgenrt],s.[cccommsn],s.[belowbal],s.[invsupno],s.[ccpayment],s.[rplsamt],s.[pdother],s.[slcode],s.[prpaidamt],s.[instldays],s.[instflag],s.[slcmnd],s.[inv_printed],s.[bendit],s.[modified],s.[rqstorder],s.[rqststld],s.[carrier],s.[rcvdtrn],s.[usrid],s.[address],s.[wst_key],s.[wst_amt],s.[gmark],s.[tameen],s.[shahan],s.[msfr],s.[mother],s.[etax],s.[remarks],s.[tax_amt_paid],s.[with_tax],s.[taxid],s.[tax_percent],s.[taxfree_amt],s.[reref],s.[sabr]);'
		
------		begin transaction
------		exec sp_executesql @sqlmsg
------		if @@error<>0
------		begin
------			rollback transaction
------			set @errstatus=6	
------			return	--@errstatus		 				
------		end
------		else commit transaction

     if @ok_pu_dtl=1
	    BEGIN
	   BEGIN TRANSACTION;  
  
       BEGIN TRY 

	    delete from  pu_dtl where branch=@br_no and pucenter=@sl_no and invtype=@trtype and ref=@trref;

		merge pu_dtl as t 
		using (select * from @pu_dtl_tb where branch=@br_no and pucenter=@sl_no and invtype=@trtype and ref=@trref) as s
		ON t.[branch] = s.[branch] AND t.[folio] = s.[folio] AND t.[invtype] = s.[invtype] AND t.[ref] = s.[ref] AND t.[pucenter] = s.[pucenter]
		when not matched then
		INSERT([branch],[pucenter],[invtype],[ref],[invmdate],[invhdate],[itemno],[unicode],[qty],[fqty],[price],[discpc],[cost],[ds_acfm],[sl_acfm],[gclass],[fullcost],[cur],[barcode],[imfcval],[pack],[pkqty],[shadd],[shdpk],[shdqty],[frtqty],[rtnqty],[whno],[cmbkey],[folio],[rplct_post],[sold_item_status],[tax_amt],[tax_id],[stk_or_ser],[tax_prcent],[expdate])
        VALUES(s.[branch],s.[pucenter],s.[invtype],s.[ref],s.[invmdate],s.[invhdate],s.[itemno],s.[unicode],s.[qty],s.[fqty],s.[price],s.[discpc],s.[cost],s.[ds_acfm],s.[sl_acfm],s.[gclass],s.[fullcost],s.[cur],s.[barcode],s.[imfcval],s.[pack],s.[pkqty],s.[shadd],s.[shdpk],s.[shdqty],s.[frtqty],s.[rtnqty],s.[whno],s.[cmbkey],s.[folio],s.[rplct_post],s.[sold_item_status],s.[tax_amt],s.[tax_id],s.[stk_or_ser],s.[tax_prcent],s.[expdate]);
		
        set @errstatus=1
	    COMMIT;  	  
	   END TRY

       BEGIN CATCH
	     set @errstatus=0
         ROLLBACK; 
       END CATCH
	   END
--	end
------  Process Sto_hdr & Sto_dtl Table   
--	if @ok_st=1 
--	begin
	  
--	 ---- 	set @sqlmsg='merge sto_hdr as t 
--		----using (select * from '+@dbc+'sto_hdr with (NOLOCK) where 1=1 ' + iif(@ok_pstd=1,' and posted=1 ','')
--		----+' and trmdate between '+@fmdate+' and '+@todate+') as s
--		---- ON t.[branch] = s.[branch] AND t.[ref] = s.[ref] AND t.[trtype] = s.[trtype]
--		---- when not matched then
--		----INSERT([branch],[trtype],[ref],[trmdate],[trhdate],[text],[amnttl],[costttl],[sysdate],[src],[released],[posted],[fcy],[fcyrate],[whno],[entries],[lastupdt],[towhno],[modified],[rcvdtrn],[supno],[usrid],[brsupp],[tobrno],[brxref],[glref],[isbrtrx],[asmtype],[repost],[remarks],[stkjvno])
--  ----      VALUES(s.[branch],s.[trtype],s.[ref],s.[trmdate],s.[trhdate],s.[text],s.[amnttl],s.[costttl],s.[sysdate],s.[src],s.[released],s.[posted],s.[fcy],s.[fcyrate],s.[whno],s.[entries],s.[lastupdt],s.[towhno],s.[modified],s.[rcvdtrn],s.[supno],s.[usrid],s.[brsupp],s.[tobrno],s.[brxref],s.[glref],s.[isbrtrx],s.[asmtype],s.[repost],s.[remarks],s.[stkjvno]);'
		
--		----begin transaction
--		----exec sp_executesql @sqlmsg
--		----if @@error<>0
--		----begin
--		----	rollback transaction
--		----	set @errstatus=8	
--		----	return	--@errstatus		 				
--		----end
--		----else commit transaction

      if @ok_sto_dtl=1
	    BEGIN

	   BEGIN TRANSACTION;  
  
       BEGIN TRY 

	    delete from  sto_dtl where branch=@br_no  and trtype=@trtype and ref=@trref;
        merge sto_dtl as t 
 		using ( select * from @sto_dtl_tb where branch=@br_no  and trtype=@trtype and ref=@trref) as s
 		ON t.[branch] = s.[branch] AND t.[folio] = s.[folio] AND t.[ref] = s.[ref] AND t.[trtype] = s.[trtype]
 		when not matched then
 		INSERT([branch],[trtype],[ref],[trmdate],[trhdate],[itemno],[unicode],[qty],[fqty],[whno],[binno],[lcost],[sysdate],[src],[lprice],[fcost],[fprice],[expdate],[towhno],[tobinno],[barcode],[cmbkey],[discpc],[pack],[pkqty],[shdpk],[shdqty],[folio],[rplct_post])
        VALUES(s.[branch],s.[trtype],s.[ref],s.[trmdate],s.[trhdate],s.[itemno],s.[unicode],s.[qty],s.[fqty],s.[whno],s.[binno],s.[lcost],s.[sysdate],s.[src],s.[lprice],s.[fcost],s.[fprice],s.[expdate],s.[towhno],s.[tobinno],s.[barcode],s.[cmbkey],s.[discpc],s.[pack],s.[pkqty],s.[shdpk],s.[shdqty],s.[folio],s.[rplct_post]);
		
        set @errstatus=1
	    COMMIT;  	  
	   END TRY

       BEGIN CATCH
	     set @errstatus=0
         ROLLBACK; 
       END CATCH
	   END
--	end


--	return	@errstatus
END






CREATE PROCEDURE [dbo].[Save_Hdr_Dtl_Data]

	@ok_sl_dtl bit,
	@ok_pu_dtl bit,
	@ok_sto_dtl bit,

	@br_no nvarchar(2),	
	@sl_no nvarchar(2),	
	@trtype nvarchar(2),
	@trref int,

	@sales_hdr_tb tb_sal_hdr  READONLY,
	@pu_hdr_tb tb_pu_hdr  READONLY,
	@sto_hdr_tb tb_sto_hdr  READONLY,

	@sales_dtl_tb tb_sales_dtl  READONLY,
	@pu_dtl_tb tb_pu_dtl  READONLY,
	@sto_dtl_tb tb_sto_dtl  READONLY,


	@errstatus int=0 output
 
AS
BEGIN

	if @ok_sl_dtl=1
	   BEGIN 
	   BEGIN TRANSACTION;  
  
       BEGIN TRY 

	    merge sales_hdr as t 
	    using (select * from @sales_hdr_tb where branch=@br_no and slcenter=@sl_no and invtype=@trtype and ref=@trref) as s
		ON t.[branch] = s.[branch] AND t.[invtype] = s.[invtype] AND t.[ref] = s.[ref] AND t.[slcenter] = s.[slcenter]
	    when not matched then
		INSERT(branch,slcenter,invtype,ref,invmdate, invhdate,[text],remarks,casher,entries,invttl,invdsvl,nettotal,invdspc,tax_amt_rcvd,with_tax,usrid,custno,invcst,[suspend],glser,slcode,stkjvno,taxid,tax_percent,taxfree_amt,carrier,invpaid,chkno,reref,sanedcrd_amt,rtncash_dfrpl,fcy2)
        VALUES(s.branch,s.slcenter,s.invtype,s.ref,s.invmdate, s.invhdate,s.[text],s.remarks,s.casher,s.entries,round(s.invttl,2),round(s.invdsvl,2),round(s.nettotal,2),s.invdspc,round(s.tax_amt_rcvd,2),s.with_tax,s.usrid,s.custno,s.invcst,s.[suspend],s.glser,s.slcode,s.stkjvno,s.taxid,s.tax_percent,round(s.taxfree_amt,2),s.carrier,s.invpaid,s.chkno,s.reref,s.sanedcrd_amt,s.rtncash_dfrpl,s.fcy2);		

	   -- delete from  sales_dtl where branch=@br_no and slcenter=@sl_no and invtype=@trtype and ref=@trref;

		merge sales_dtl as t 
		using (select * from @sales_dtl_tb where branch=@br_no and slcenter=@sl_no and invtype=@trtype and ref=@trref) as s
	    ON t.[branch] = s.[branch] AND t.[folio] = s.[folio] AND t.[invtype] = s.[invtype] AND t.[ref] = s.[ref] AND t.[slcenter] = s.[slcenter]
	    when not matched then
		INSERT([branch],[slcenter],[invtype],[ref],[invmdate],[invhdate],[itemno],[unicode],[qty],[fqty],[price],[discpc],[cost],[ds_acfm],[sl_acfm],[gclass],[custno],[fcy],[barcode],[imfcval],[pack],[pkqty],[shadd],[shdpk],[shdqty],[frtqty],[rtnqty],[whno],[cmbkey],[folio],[rplct_post],[sold_item_status],[tax_amt],[tax_id],[stk_or_ser],[tax_prcent],[offer_amt])
        VALUES(s.[branch],s.[slcenter],s.[invtype],s.[ref],s.[invmdate],s.[invhdate],s.[itemno],s.[unicode],s.[qty],s.[fqty],s.[price],s.[discpc],s.[cost],s.[ds_acfm],s.[sl_acfm],s.[gclass],s.[custno],s.[fcy],s.[barcode],s.[imfcval],s.[pack],s.[pkqty],s.[shadd],s.[shdpk],s.[shdqty],s.[frtqty],s.[rtnqty],s.[whno],s.[cmbkey],s.[folio],s.[rplct_post],s.[sold_item_status],s.[tax_amt],s.[tax_id],s.[stk_or_ser],s.[tax_prcent],s.[offer_amt]);
		
        set @errstatus=1
	    COMMIT;  	  
	   END TRY

       BEGIN CATCH
	     set @errstatus=0 --ERROR_MESSAGE()
         ROLLBACK; 
       END CATCH
	   END
------  Process pu_hdr & pu_dtl Table  
-- 	if @ok_pu_dtl=1 
--	begin
------------ sdaad_hd Table
------		set @sqlmsg='merge pu_hdr as t 
------		using (select * from '+@dbc+'pu_hdr with (NOLOCK) where 1=1 ' + iif(@ok_pstd=1,' and posted=1 ','')
------		+' and invmdate between '+@fmdate+' and '+@todate+') as s
------		 ON t.[branch] = s.[branch] AND t.[invtype] = s.[invtype] AND t.[ref] = s.[ref] AND t.[pucenter] = s.[pucenter]
------		 when not matched then
------		INSERT([branch],[pucenter],[invtype],[ref],[invmdate],[invhdate],[supno],[text],[glser],[dsctype],[pstmode],[cur],[currate],[invttl],[invcst],[invdspc],[invdsvl],[nettotal],[invpaid],[casher],[entries],[released],[posted],[fixrate],[extamt],[extser],[pricetp],[ischeque],[chkno],[chkdate],[lastupdt],[jvgenrt],[cccommsn],[belowbal],[invsupno],[ccpayment],[rplsamt],[pdother],[slcode],[prpaidamt],[instldays],[instflag],[slcmnd],[inv_printed],[bendit],[modified],[rqstorder],[rqststld],[carrier],[rcvdtrn],[usrid],[address],[wst_key],[wst_amt],[gmark],[tameen],[shahan],[msfr],[mother],[etax],[remarks],[tax_amt_paid],[with_tax],[taxid],[tax_percent],[taxfree_amt],[reref],[sabr])
------        VALUES(s.[branch],s.[pucenter],s.[invtype],s.[ref],s.[invmdate],s.[invhdate],s.[supno],s.[text],s.[glser],s.[dsctype],s.[pstmode],s.[cur],s.[currate],s.[invttl],s.[invcst],s.[invdspc],s.[invdsvl],s.[nettotal],s.[invpaid],s.[casher],s.[entries],s.[released],s.[posted],s.[fixrate],s.[extamt],s.[extser],s.[pricetp],s.[ischeque],s.[chkno],s.[chkdate],s.[lastupdt],s.[jvgenrt],s.[cccommsn],s.[belowbal],s.[invsupno],s.[ccpayment],s.[rplsamt],s.[pdother],s.[slcode],s.[prpaidamt],s.[instldays],s.[instflag],s.[slcmnd],s.[inv_printed],s.[bendit],s.[modified],s.[rqstorder],s.[rqststld],s.[carrier],s.[rcvdtrn],s.[usrid],s.[address],s.[wst_key],s.[wst_amt],s.[gmark],s.[tameen],s.[shahan],s.[msfr],s.[mother],s.[etax],s.[remarks],s.[tax_amt_paid],s.[with_tax],s.[taxid],s.[tax_percent],s.[taxfree_amt],s.[reref],s.[sabr]);'
		
------		begin transaction
------		exec sp_executesql @sqlmsg
------		if @@error<>0
------		begin
------			rollback transaction
------			set @errstatus=6	
------			return	--@errstatus		 				
------		end
------		else commit transaction

     if @ok_pu_dtl=1
	    BEGIN
	   BEGIN TRANSACTION;  
  
       BEGIN TRY 

	    merge pu_hdr as t 
		using (select * from @pu_hdr_tb where branch=@br_no and pucenter=@sl_no and invtype=@trtype and ref=@trref) as s
	    ON t.[branch] = s.[branch] AND t.[invtype] = s.[invtype] AND t.[ref] = s.[ref] AND t.[pucenter] = s.[pucenter]
	    when not matched then
		INSERT([branch],[pucenter],[invtype],[ref],[invmdate],[invhdate],[supno],[text],[glser],[dsctype],[pstmode],[cur],[currate],[invttl],[invcst],[invdspc],[invdsvl],[nettotal],[invpaid],[casher],[entries],[released],[posted],[fixrate],[extamt],[extser],[pricetp],[ischeque],[chkno],[chkdate],[lastupdt],[jvgenrt],[cccommsn],[belowbal],[invsupno],[ccpayment],[rplsamt],[pdother],[slcode],[prpaidamt],[instldays],[instflag],[slcmnd],[inv_printed],[bendit],[modified],[rqstorder],[rqststld],[carrier],[rcvdtrn],[usrid],[address],[wst_key],[wst_amt],[gmark],[tameen],[shahan],[msfr],[mother],[etax],[remarks],[tax_amt_paid],[with_tax],[taxid],[tax_percent],[taxfree_amt],[reref],[sabr])
        VALUES(s.[branch],s.[pucenter],s.[invtype],s.[ref],s.[invmdate],s.[invhdate],s.[supno],s.[text],s.[glser],s.[dsctype],s.[pstmode],s.[cur],s.[currate],s.[invttl],s.[invcst],s.[invdspc],s.[invdsvl],s.[nettotal],s.[invpaid],s.[casher],s.[entries],s.[released],s.[posted],s.[fixrate],s.[extamt],s.[extser],s.[pricetp],s.[ischeque],s.[chkno],s.[chkdate],s.[lastupdt],s.[jvgenrt],s.[cccommsn],s.[belowbal],s.[invsupno],s.[ccpayment],s.[rplsamt],s.[pdother],s.[slcode],s.[prpaidamt],s.[instldays],s.[instflag],s.[slcmnd],s.[inv_printed],s.[bendit],s.[modified],s.[rqstorder],s.[rqststld],s.[carrier],s.[rcvdtrn],s.[usrid],s.[address],s.[wst_key],s.[wst_amt],s.[gmark],s.[tameen],s.[shahan],s.[msfr],s.[mother],s.[etax],s.[remarks],s.[tax_amt_paid],s.[with_tax],s.[taxid],s.[tax_percent],s.[taxfree_amt],s.[reref],s.[sabr]);
		

	   -- delete from  pu_dtl where branch=@br_no and pucenter=@sl_no and invtype=@trtype and ref=@trref;

		merge pu_dtl as t 
		using (select * from @pu_dtl_tb where branch=@br_no and pucenter=@sl_no and invtype=@trtype and ref=@trref) as s
		ON t.[branch] = s.[branch] AND t.[folio] = s.[folio] AND t.[invtype] = s.[invtype] AND t.[ref] = s.[ref] AND t.[pucenter] = s.[pucenter]
		when not matched then
		INSERT([branch],[pucenter],[invtype],[ref],[invmdate],[invhdate],[itemno],[unicode],[qty],[fqty],[price],[discpc],[cost],[ds_acfm],[sl_acfm],[gclass],[fullcost],[cur],[barcode],[imfcval],[pack],[pkqty],[shadd],[shdpk],[shdqty],[frtqty],[rtnqty],[whno],[cmbkey],[folio],[rplct_post],[sold_item_status],[tax_amt],[tax_id],[stk_or_ser],[tax_prcent],[expdate])
        VALUES(s.[branch],s.[pucenter],s.[invtype],s.[ref],s.[invmdate],s.[invhdate],s.[itemno],s.[unicode],s.[qty],s.[fqty],s.[price],s.[discpc],s.[cost],s.[ds_acfm],s.[sl_acfm],s.[gclass],s.[fullcost],s.[cur],s.[barcode],s.[imfcval],s.[pack],s.[pkqty],s.[shadd],s.[shdpk],s.[shdqty],s.[frtqty],s.[rtnqty],s.[whno],s.[cmbkey],s.[folio],s.[rplct_post],s.[sold_item_status],s.[tax_amt],s.[tax_id],s.[stk_or_ser],s.[tax_prcent],s.[expdate]);
		
        set @errstatus=1
	    COMMIT;  	  
	   END TRY

       BEGIN CATCH
	     set @errstatus=0 --ERROR_MESSAGE()
         ROLLBACK; 
       END CATCH
	   END
--	end
------  Process Sto_hdr & Sto_dtl Table   
--	if @ok_st=1 
--	begin
	  
--	 ---- 	set @sqlmsg='merge sto_hdr as t 
--		----using (select * from '+@dbc+'sto_hdr with (NOLOCK) where 1=1 ' + iif(@ok_pstd=1,' and posted=1 ','')
--		----+' and trmdate between '+@fmdate+' and '+@todate+') as s
--		---- ON t.[branch] = s.[branch] AND t.[ref] = s.[ref] AND t.[trtype] = s.[trtype]
--		---- when not matched then
--		----INSERT([branch],[trtype],[ref],[trmdate],[trhdate],[text],[amnttl],[costttl],[sysdate],[src],[released],[posted],[fcy],[fcyrate],[whno],[entries],[lastupdt],[towhno],[modified],[rcvdtrn],[supno],[usrid],[brsupp],[tobrno],[brxref],[glref],[isbrtrx],[asmtype],[repost],[remarks],[stkjvno])
--  ----      VALUES(s.[branch],s.[trtype],s.[ref],s.[trmdate],s.[trhdate],s.[text],s.[amnttl],s.[costttl],s.[sysdate],s.[src],s.[released],s.[posted],s.[fcy],s.[fcyrate],s.[whno],s.[entries],s.[lastupdt],s.[towhno],s.[modified],s.[rcvdtrn],s.[supno],s.[usrid],s.[brsupp],s.[tobrno],s.[brxref],s.[glref],s.[isbrtrx],s.[asmtype],s.[repost],s.[remarks],s.[stkjvno]);'
		
--		----begin transaction
--		----exec sp_executesql @sqlmsg
--		----if @@error<>0
--		----begin
--		----	rollback transaction
--		----	set @errstatus=8	
--		----	return	--@errstatus		 				
--		----end
--		----else commit transaction

      if @ok_sto_dtl=1
	    BEGIN

	   BEGIN TRANSACTION;  
  
       BEGIN TRY 

	    merge sto_hdr as t 
		using ( select * from @sto_hdr_tb where branch=@br_no  and trtype=@trtype and ref=@trref) as s
		 ON t.[branch] = s.[branch] AND t.[ref] = s.[ref] AND t.[trtype] = s.[trtype]
		 when not matched then
		INSERT([branch],[trtype],[ref],[trmdate],[trhdate],[text],[amnttl],[costttl],[sysdate],[src],[released],[posted],[fcy],[fcyrate],[whno],[entries],[lastupdt],[towhno],[modified],[rcvdtrn],[supno],[usrid],[brsupp],[tobrno],[brxref],[glref],[isbrtrx],[asmtype],[repost],[remarks],[stkjvno])
        VALUES(s.[branch],s.[trtype],s.[ref],s.[trmdate],s.[trhdate],s.[text],s.[amnttl],s.[costttl],s.[sysdate],s.[src],s.[released],s.[posted],s.[fcy],s.[fcyrate],s.[whno],s.[entries],s.[lastupdt],s.[towhno],s.[modified],s.[rcvdtrn],s.[supno],s.[usrid],s.[brsupp],s.[tobrno],s.[brxref],s.[glref],s.[isbrtrx],s.[asmtype],s.[repost],s.[remarks],s.[stkjvno]);
		
	   -- delete from  sto_dtl where branch=@br_no  and trtype=@trtype and ref=@trref;

        merge sto_dtl as t 
 		using ( select * from @sto_dtl_tb where branch=@br_no  and trtype=@trtype and ref=@trref) as s
 		ON t.[branch] = s.[branch] AND t.[folio] = s.[folio] AND t.[ref] = s.[ref] AND t.[trtype] = s.[trtype]
 		when not matched then
 		INSERT([branch],[trtype],[ref],[trmdate],[trhdate],[itemno],[unicode],[qty],[fqty],[whno],[binno],[lcost],[sysdate],[src],[lprice],[fcost],[fprice],[expdate],[towhno],[tobinno],[barcode],[cmbkey],[discpc],[pack],[pkqty],[shdpk],[shdqty],[folio],[rplct_post])
        VALUES(s.[branch],s.[trtype],s.[ref],s.[trmdate],s.[trhdate],s.[itemno],s.[unicode],s.[qty],s.[fqty],s.[whno],s.[binno],s.[lcost],s.[sysdate],s.[src],s.[lprice],s.[fcost],s.[fprice],s.[expdate],s.[towhno],s.[tobinno],s.[barcode],s.[cmbkey],s.[discpc],s.[pack],s.[pkqty],s.[shdpk],s.[shdqty],s.[folio],s.[rplct_post]);
		
        set @errstatus=1
	    COMMIT;  	  
	   END TRY

       BEGIN CATCH
	     set @errstatus=0 --ERROR_MESSAGE()
         ROLLBACK; 
       END CATCH
	   END
--	end


--	return	@errstatus
END


create PROCEDURE [dbo].[update_pos_inv] 

@pos_hdr_tb tblpos_hdr READONLY,
@pos_dtl_tb tblpos_dtl READONLY

AS
BEGIN

  MERGE pos_hdr as t
  USING @pos_hdr_tb as s
  ON t.brno=s.brno and T.slno=S.slno and T.ref=S.ref and T.contr=S.contr
  WHEN MATCHED THEN
  UPDATE SET T.total = S.total,T.discount = S.discount,T.net_total = S.net_total,t.tax_amt=s.tax_amt
  WHEN NOT MATCHED THEN
  INSERT VALUES(s.brno,s.slno, s.ref, s.contr,s.type,s.date,s.total,s.count,s.payed,s.total_cost,s.saleman,s.req_no,s.cust_no,s.discount,s.net_total,s.sysdate,s.gen_ref,s.tax_amt,s.dscper,s.card_type,s.card_amt,s.rref,s.rcontr,s.taxfree_amt,s.note,s.mobile);

    --MERGE items AS T
    --using @items_tb  AS S
    --ON (T.item_barcode = S.item_barcode)
    --WHEN NOT MATCHED
    --THEN INSERT (item_no, item_name, item_cost,item_price,item_barcode,item_unit,item_obalance,item_cbalance,item_group,item_image,item_req)
    --VALUES (s.item_no, s.item_name, s.item_cost,s.item_price,s.item_barcode,s.item_unit,s.item_obalance,s.item_cbalance,s.item_group,s.item_image,s.item_req)
    --WHEN MATCHED
    --THEN UPDATE SET T.item_price = S.item_price
    --WHEN NOT MATCHED BY SOURCE
    --THEN DELETE;

  END


 BEGIN

  MERGE pos_dtl as t
  USING @pos_dtl_tb as s
  ON t.brno=s.brno and T.slno=S.slno and T.ref=S.ref and T.contr=S.contr and T.srno=S.srno
  WHEN MATCHED THEN
  UPDATE SET T.price = S.price,T.qty=S.qty,t.itemno=s.itemno,t.srno=s.srno
  WHEN NOT MATCHED THEN
  INSERT VALUES(s.brno,s.slno, s.ref, s.contr,s.type,s.barcode,s.name,s.unit,s.price,s.qty,s.cost,s.is_req,s.itemno,s.srno,s.pkqty,s.discpc,s.tax_id,s.tax_amt,s.rqty,s.offr_amt);
                 
    --MERGE items_bc as t
    --USING @items_bc_tb as s
    --ON t.barcode=s.barcode
    --WHEN MATCHED THEN
    --UPDATE SET t.price = s.price
    --WHEN NOT MATCHED THEN
    --INSERT VALUES(s.item_no, s.barcode, s.pack, s.pk_qty, s.price, s.note,s.pkorder);

  END



